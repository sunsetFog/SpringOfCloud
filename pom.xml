<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.core</groupId>
    <artifactId>SpringOfCloud</artifactId>
    <version>1.0-SNAPSHOT</version>
<!--
报错：Caused by: java.lang.ClassNotFoundException: org.springframework.core.metrics.ApplicationStartup
-->
<!--    <parent>-->
<!--        <groupId>org.springframework.boot</groupId>-->
<!--        <artifactId>spring-boot-starter-parent</artifactId>-->
<!--        <version>3.0.0</version>-->
<!--        <relativePath/>-->
<!--    </parent>-->
    <!--
        项目右键 > New > New Module
        就自动生成这里了
     -->
    <modules>
        <module>springcloud-api</module>
        <module>springcloud-provider</module>
        <module>eureka-server</module>
        <module>eureka-client</module>
        <module>eureka2client</module>
        <module>MyBatisPlus</module>
        <module>Rabbitmq-consumer</module>
        <module>base-core</module>
        <module>upload-files</module>
        <module>news-system</module>
    </modules>
    <!--  版本号  -->
    <properties>
        <!-- JDK版本，要对应上 -->
        <java.version>11</java.version>
        <apple.version>1.0-SNAPSHOT</apple.version>
        <junit.version>4.12</junit.version>
        <!--   配置编码格式    -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
    </properties>
    <!--  打包方式：pom  -->
    <packaging>pom</packaging>
    <!--  子工程公用的jar包  -->
    <dependencies>

        <!--     SpringCloud依赖   删掉<scope>import</scope>      -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>2021.0.4</version>
            <type>pom</type>
<!--            <scope>import</scope>-->
        </dependency>


        <!--	study: rabbitmq	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <version>2.7.3</version>
        </dependency>
        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <version>5.15.0</version>
        </dependency>
        <!--study: EasyExcel导出导入-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>3.0.5</version>
        </dependency>



        <!--	study: Swagger	-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
        <!--	热部署	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <!--	JSR-303数据校验,要用javax里的	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>2.7.6</version>
        </dependency>
        <!--study: token依赖-->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.4.0</version>
        </dependency>
        <!--	++++++++++++++++授权与认证jar包+++++++++++++++ 	-->

        <!--  study: security安全  装上就要配置授权，否则报错：401  Unauthorized  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.7.6</version>
        </dependency>
        <!-- study: Shiro整合Spring,安全验证 -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.4.1</version>
        </dependency>



        <!-- study: redis   操作Redis客服端，不推荐	-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>4.2.3</version>
        </dependency>
        <!--	study: redis     springboot集成redis，推荐	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>2.7.6</version>
        </dependency>
        <!--   study: mail 邮件任务	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
            <version>2.7.6</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.76</version>
        </dependency>
        <!--	++++++++++++++++基础jar包+++++++++++++++ 	-->
        <!--	springboot框架构建 web依赖 用于实现HTTP接口（包含springMVC） 内置tomcat运行服务器 必加jar包	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.7.2</version>
        </dependency>
        <!--单元测试	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.7.6</version>
            <scope>test</scope>
        </dependency>
        <!-- 生产提示	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>2.7.6</version>
            <optional>true</optional>
        </dependency>


        <!-- study: lombok
			 作用：日志、实体类方法、注解
		-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
            <scope>provided</scope>
        </dependency>
        <!--     junit    统一版本   import org.junit.Test;   -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <!--   java: 程序包org.junit.jupiter.api不存在     -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency>
        <!--      Log4j      -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- study: hutool   小而全的Java工具类库	-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.1</version>
        </dependency>
        <!--	++++++++++++++++前后端不分离开发jar包+++++++++++++++ 	-->

        <!--jquery 支持静态资源的  WebMvcAutoConfiguration有用到-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>2.1.1</version>
        </dependency>
        <!--web模板引擎-->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring5</artifactId>
<!--            <version>3.1.0.RC2</version>-->
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-java8time</artifactId>
<!--            <version>3.0.3.RELEASE</version>-->
        </dependency>
        <!--	++++++++++++++++操作数据库jar包+++++++++++++++ 	-->

        <!--  study: mybatis  要先yml配置DataSource，否则报错Failed to configure a DataSource	-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.2.2</version>
        </dependency>
        <!--study: MYSQL Driver数据库驱动  要先yml配置DataSource，否则报错Failed to configure a DataSource-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.30</version>
            <scope>runtime</scope>
        </dependency>
        <!-- study: Druid数据源  要先yml配置DataSource，否则报错Failed to configure a DataSource	-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.17</version>
        </dependency>
        <!--	JDBC API  要先yml配置DataSource，否则报错Failed to configure a DataSource	-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>2.7.6</version>
        </dependency>
    </dependencies>
    <!--  依赖管理：版本
        dependencyManagement只是声明依赖，并不会自动引入。解决子项目使用不同版本的maven
        dependencies自动引入
        dependencyManagement必须写入版本号：
            dependencies不写版本号就会使用dependencyManagement
            dependencies写版本号就不会使用dependencyManagement
        所以没出现两个不同版本，没必要写进dependencyManagement
     -->
    <dependencyManagement>
        <dependencies>
            <!--把别的工程变jar包，然后引入-->
            <dependency>
                <groupId>com.core</groupId>
                <artifactId>springcloud-api</artifactId>
                <version>${apple.version}</version>
            </dependency>
            <!--      SpringBoot      -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.1.4.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-surefire-plugin</artifactId>-->
<!--                <version>2.22.2</version>-->
<!--                <configuration>-->
<!--                    <skipTests>true</skipTests>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

</project>